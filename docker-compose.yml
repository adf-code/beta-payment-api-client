version: "3.8"

services:
  beta-payment-api-client:
    container_name: beta-payment-api-client
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env.docker
    volumes:
      - ./docker_build/logs:/app/logs
    depends_on:
      - postgres
      - minio
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: beta-book-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: beta_book_api
      POSTGRES_USER: beta_book_api_user
      POSTGRES_PASSWORD: 789qwerty123
    volumes:
      - ./docker_build/pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: beta-book-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ioadminminio123
      MINIO_ROOT_PASSWORD: ioadminminio123
    command: server /data --console-address ":9001"
    volumes:
      - ./docker_build/minio/data:/data
    networks:
      - app-network
    restart: unless-stopped

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - app-network
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 ioadminminio123 ioadminminio123;
      if ! mc ls myminio/beta-payment-api-client >/dev/null 2>&1; then
        echo 'Creating bucket my-bucket...';
        mc mb myminio/beta-payment-api-client;
        mc policy set public myminio/beta-payment-api-client;
      else
        echo 'Bucket my-bucket already exists.';
      fi
      "

networks:
  app-network:
