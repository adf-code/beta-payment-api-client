{
    "swagger": "2.0",
    "info": {
        "description": "API service to manage books using Clean Architecture",
        "title": "Beta Book API",
        "contact": {
            "name": "ADF Code",
            "url": "https://github.com/adf-code"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/payment-records/check/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a payment record entity using its UUID",
                "tags": [
                    "payment_records"
                ],
                "summary": "Check payment record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the payment record",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all books with filter, search, pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get list of books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search field (e.g., title)",
                        "name": "search_field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search value (e.g., golang)",
                        "name": "search_value",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter field",
                        "name": "filter_field",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter value",
                        "name": "filter_value",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Range field",
                        "name": "range_field",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Range lower bound",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Range upper bound",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field",
                        "name": "sort_field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort direction ASC/DESC",
                        "name": "sort_direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.APIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "actual payload"
                },
                "entity": {
                    "description": "e.g. \"books\"",
                    "type": "string"
                },
                "message": {
                    "description": "e.g. \"Success Get All Books\"",
                    "type": "string"
                },
                "state": {
                    "description": "e.g. \"getAllBooks\"",
                    "type": "string"
                },
                "status": {
                    "description": "\"success\" or \"failed\"",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Using token header using the Bearer scheme. Example: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}